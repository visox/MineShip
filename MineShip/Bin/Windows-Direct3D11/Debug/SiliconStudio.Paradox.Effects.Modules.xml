<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SiliconStudio.Paradox.Effects.Modules</name>
    </assembly>
    <members>
        <member name="T:SiliconStudio.ParadoxVersion">
            <summary>
            Internal version used to identify Paradox version.
            </summary>
            <remarks>
            Note: When modifying the version here, it must be modified also in the Paradox.pdxpkg 
            </remarks>
        </member>
        <member name="F:SiliconStudio.ParadoxVersion.CurrentAssemblyAsText">
            <summary>
            The .NET current assembly version as text, not including pre-release (alpha, beta...) information.
            </summary>
        </member>
        <member name="F:SiliconStudio.ParadoxVersion.CurrentAsText">
            <summary>
            The Store current version as text, including pre-release (alpha, beta...) information
            </summary>
            <remarks>
            Version number as described in http://docs.nuget.org/docs/reference/versioning
            When using pre-release (alpha, beta, rc...etc.) and because the order of the release is in alphabetical order,
            please use a double digit like alpha00 alpha01...etc. in order to make sure that we will follow the correct
            order for the versions.
            </remarks>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorDefaultBudget">
            <summary>
            This class inherits from <see cref="T:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorWithBudget"/> and has a budget of two 2048 x 2048 shadow map textures: one for the variance shadow maps, one for the other types.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorWithBudget">
            <summary>
            A class handling the allocation of shadow maps with a fixed budget of shadow map textures. This class is meant to be inherited with the desired budget since it has no texture at all.
            </summary>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorWithBudget.Update(SiliconStudio.Paradox.Games.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorWithBudget.AddShadowMapTexture(SiliconStudio.Paradox.Effects.Modules.ShadowMapTexture,SiliconStudio.Paradox.Engine.ShadowMapFilterType)">
            <summary>
            Adds the shadow map texture to the budget of textures.
            </summary>
            <param name="shadowMapTexture">The shadow map texture.</param>
            <param name="filterType">The filtering that will be applied to this shadow.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorWithBudget.OnSystemRemove">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorWithBudget.OnEntityAdding(SiliconStudio.Paradox.EntityModel.Entity,SiliconStudio.Paradox.Effects.Modules.EntityLightShadow)">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightShadowProcessorWithBudget.OnEntityRemoved(SiliconStudio.Paradox.EntityModel.Entity,SiliconStudio.Paradox.Effects.Modules.EntityLightShadow)">
            <inheritdoc/>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.ParticleBaseKeys">
            <summary>
            Keys used for the particle system.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.GuillotinePacker">
            <summary>
            Implementation of a "Guillotine" packer.
            More information at http://clb.demon.fi/files/RectangleBinPack.pdf.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.GBufferKeys">
            <summary>
            Keys used for GBuffer settings.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.GBufferKeys.Texture">
            <summary>
            The GBuffer render target key.
            </summary>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightPrepass.LightingPrepassRenderer.Load">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightPrepass.LightingPrepassRenderer.Unload">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightPrepass.LightingPrepassRenderer.UpdateLightDatas(SiliconStudio.Paradox.Effects.RenderContext)">
            <summary>
            Update light lists and choose the new light configuration.
            </summary>
            <param name="context">The render context.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.LightPrepass.LightingPrepassRenderer.EndRender(SiliconStudio.Paradox.Effects.RenderContext)">
            <summary>
            Clear the lists.
            </summary>
            <param name="context">The render context.</param>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.DynamicLightShadowProcessor">
            <summary>
            A class allocating as many shadow map as possible without any predefined memory budget.
            </summary>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.DynamicLightShadowProcessor.Update(SiliconStudio.Paradox.Games.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.DynamicLightShadowProcessor.OnEntityAdding(SiliconStudio.Paradox.EntityModel.Entity,SiliconStudio.Paradox.Effects.Modules.EntityLightShadow)">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.DynamicLightShadowProcessor.OnEntityRemoved(SiliconStudio.Paradox.EntityModel.Entity,SiliconStudio.Paradox.Effects.Modules.EntityLightShadow)">
            <inheritdoc/>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.Shading.LightForwardModelRenderer.PreRender(SiliconStudio.Paradox.Effects.RenderContext)">
            <summary>
            Filter out the inactive lights.
            </summary>
            <param name="context">The render context.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.Shading.LightForwardModelRenderer.PostRender(SiliconStudio.Paradox.Effects.RenderContext)">
            <summary>
            Clear the light lists.
            </summary>
            <param name="context">The render context.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.Shading.LightForwardModelRenderer.PreEffectUpdate(SiliconStudio.Paradox.Effects.RenderContext,SiliconStudio.Paradox.Effects.EffectMesh)">
            <summary>
            Update light lists and choose the new light configuration.
            </summary>
            <param name="context">The render context.</param>
            <param name="effectMesh">The current EffectMesh (the same as <seealso cref="M:SiliconStudio.Paradox.Effects.Modules.Shading.LightForwardModelRenderer.PostEffectUpdate(SiliconStudio.Paradox.Effects.RenderContext,SiliconStudio.Paradox.Effects.EffectMesh)"/>)</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.Shading.LightForwardModelRenderer.PostEffectUpdate(SiliconStudio.Paradox.Effects.RenderContext,SiliconStudio.Paradox.Effects.EffectMesh)">
            <summary>
            Update the light values of the shader.
            </summary>
            <param name="context">The render context.</param>
            <param name="effectMesh">The current EffectMesh (the same as <seealso cref="M:SiliconStudio.Paradox.Effects.Modules.Shading.LightForwardModelRenderer.PreEffectUpdate(SiliconStudio.Paradox.Effects.RenderContext,SiliconStudio.Paradox.Effects.EffectMesh)"/>)</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.RenderPipelineLightingFactory.CreateDefaultForward(SiliconStudio.Core.IServiceRegistry,System.String,SiliconStudio.Core.Mathematics.Color,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a basic forward rendering pipeline.
            </summary>
            <param name="serviceRegistry">The IServiceRegistry.</param>
            <param name="effectName">The name of the main effect.</param>
            <param name="clearColor">The clear color of the final frame buffer.</param>
            <param name="useShadows">A flag stating if shadows are available in this pipeline.</param>
            <param name="ui">A flag stating if a UI renderer should be added to the pipeline.</param>
            <param name="backgroundName">The name of the background texture.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.RenderPipelineLightingFactory.CreateDefaultForward(SiliconStudio.Paradox.Game,System.String,SiliconStudio.Core.Mathematics.Color,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a basic forward rendering pipeline.
            </summary>
            <param name="game">The game.</param>
            <param name="effectName">The name of the main effect.</param>
            <param name="clearColor">The clear color of the final frame buffer.</param>
            <param name="useShadows">A flag stating if shadows are available in this pipeline.</param>
            <param name="ui">A flag stating if a UI renderer should be added to the pipeline.</param>
            <param name="backgroundName">The name of the background texture.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.RenderPipelineLightingFactory.DestroyDefaultForwardPipeline(SiliconStudio.Paradox.Game)">
            <summary>
            Destroys the forward rendering pipeline.
            </summary>
            <param name="game">The game.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.RenderPipelineLightingFactory.CreateDefaultDeferred(SiliconStudio.Core.IServiceRegistry,System.String,System.String,SiliconStudio.Core.Mathematics.Color,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a basic deferred rendering pipeline.
            </summary>
            <param name="serviceRegistry">The IServiceRegistry.</param>
            <param name="effectName">The name of the main effect.</param>
            <param name="prepassEffectName">The name of the light prepass effect.</param>
            <param name="clearColor">The clear color of the final frame buffer.</param>
            <param name="useShadows">A flag stating if shadows are available in this pipeline.</param>
            <param name="ui">A flag stating if a UI renderer should be added to the pipeline.</param>
            <param name="backgroundName">The name of the background texture.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.RenderPipelineLightingFactory.CreateDefaultDeferred(SiliconStudio.Paradox.Game,System.String,System.String,SiliconStudio.Core.Mathematics.Color,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a basic deferred rendering pipeline.
            </summary>
            <param name="game">The game.</param>
            <param name="effectName">The name of the main effect.</param>
            <param name="prepassEffectName">The name of the light prepass effect.</param>
            <param name="clearColor">The clear color.</param>
            <param name="useShadows">A flag stating if shadows are available in this pipeline.</param>
            <param name="backgroundName">The name of the background texture.</param>
        </member>
        <member name="M:SiliconStudio.Paradox.Effects.Modules.RenderPipelineLightingFactory.DestroyDefaultDeferredPipeline(SiliconStudio.Paradox.Game)">
            <summary>
            Destroys the deferred rendering pipeline.
            </summary>
            <param name="game">The game.</param>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.ShadowMap">
            <summary>
            Represents a shadow map for the <see cref="T:SiliconStudio.Paradox.Effects.Modules.ShadowMapRenderer"/>.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.Update">
            <summary>
            A flag stating if the shadow map should be updated.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.LightDirection">
            <summary>
            The light direction.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.ShadowMapSize">
            <value>
            The size of the shadow map.
            </value>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.ShadowNearDistance">
            <summary>
            The shadow map near clipping distance.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.ShadowFarDistance">
            <summary>
            The shadow map far clipping distance.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.CascadeCount">
            <summary>
            The number of shadow map cascades.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.Filter">
            <summary>
            The shadow map filter.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.Texture">
            <summary>
            The shadow map texture.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMap.Layers">
            <summary>
            The active layers for this shadow map.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.ShadowMapRenderer">
            <summary>
            Handles shadow mapping.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMapRenderer.FrustrumBasePoints">
            <summary>
            Base points for frustrum corners.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMapRenderer.VectorUps">
            <summary>
            The various UP vectors to try.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.ShadowMapTexture">
            <summary>
            Represents a texture to use with <see cref="T:SiliconStudio.Paradox.Effects.Modules.ShadowMapRenderer"/>.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.LightKeys">
            <summary>
            Keys used for Lighting plugin.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.LightKeys.LightColor">
            <summary>
            Diffuse color.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.LightKeys.LightRadius">
            <summary>
            Light radius for point light.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.LightKeys.LightIntensity">
            <summary>
            Light intensity..
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.LightKeys.LightAttenuationCutoff">
            <summary>
            Light cutoff for point light.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.LightKeys.LightPosition">
            <summary>
            Light position.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.LightKeys.LightDirection">
            <summary>
            Light direction.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.LightKeys.LightDirectionVS">
            <summary>
            Light direction VS.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.ShadowMapKeys">
            <summary>
            Keys used for shadow mapping.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMapKeys.DepthTexture">
            <summary>
            Depth sampling texture.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMapKeys.Texture">
            <summary>
            Final shadow map texture.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMapKeys.Sampler">
            <summary>
            TODO comment this sampler.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMapKeys.Sampler2">
            <summary>
            TODO comment this sampler.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.ShadowMapKeys.DistanceMax">
            <summary>
            Maximum distance used by a shadow map.
            </summary>
        </member>
        <member name="T:SiliconStudio.Paradox.Effects.Modules.SSAOKeys">
            <summary>
            Keys used for texturing.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.SSAOKeys.Texture">
            <summary>
            Source texture.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.SSAOKeys.Intensity">
            <summary>
            Intensity of the ambient occlusion.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.SSAOKeys.SamplingRadius">
            <summary>
            Size of the sampling radius where random samples will be taken.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.SSAOKeys.Scale">
            <summary>
            Scale distance between occluder and occludee.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.SSAOKeys.Bias">
            <summary>
            Width of the occlusion cone for occludee
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.SSAOKeys.SelfOcclusion">
            <summary>
            Self occlusion factors. TODO comment this field.
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.PostEffectKeys.MixCoefficients">
            <summary>
            Blur coefficients from [0] to [4].
            </summary>
        </member>
        <member name="F:SiliconStudio.Paradox.Effects.Modules.TessellationKeys.DesiredTriangleSize">
            <summary>
            Desired maximum triangle size in screen space during tessellation.
            </summary>
        </member>
    </members>
</doc>
