/***** Used Parameters *****
 * EffectName: MineShipEffectMain
 * CompilerParameters.DebugKey: True
 * CompilerParameters.GraphicsPlatformKey: Direct3D11
 * CompilerParameters.GraphicsProfileKey: Level_9_1
 * MaterialParameters.AlbedoDiffuse: NullValue
 * MaterialParameters.HasSkinningPosition: False
 ***************************/
struct PS_STREAMS 
{
    float4 ColorTarget_id1;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id1 : SV_Target;
};
struct VS_STREAMS 
{
    float4 Position_id6;
    float4 PositionWS_id7;
    float4 PositionH_id8;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
};
struct VS_INPUT 
{
    float4 Position_id6 : POSITION;
};
cbuffer OpenglFlags 
{
    float ParadoxFlipRendertarget;
};
cbuffer PerObject 
{
    float4x4 World_id15;
};
cbuffer PerFrame 
{
    float4x4 ViewProjection_id16;
};
float4 Compute_id18()
{
    return 0;
}
void PostTransformPosition_id4()
{
}
void PreTransformPosition_id2()
{
}
float4 DiffuseAlbedo_id8()
{
    return Compute_id18();
}
float4 Shading_id16()
{
    return float4(0, 0, 0, 0);
}
void PostTransformPosition_id7(inout VS_STREAMS streams)
{
    PostTransformPosition_id4();
    streams.ShadingPosition_id0 = mul(streams.PositionWS_id7, ViewProjection_id16);
    streams.PositionH_id8 = streams.ShadingPosition_id0;
}
void TransformPosition_id3()
{
}
void PreTransformPosition_id6(inout VS_STREAMS streams)
{
    PreTransformPosition_id2();
    streams.PositionWS_id7 = mul(streams.Position_id6, World_id15);
}
float4 Shading_id17()
{
    return Shading_id16() + DiffuseAlbedo_id8();
}
void PSMain_id1()
{
}
void BaseTransformVS_id5(inout VS_STREAMS streams)
{
    PreTransformPosition_id6(streams);
    TransformPosition_id3();
    PostTransformPosition_id7(streams);
}
PS_OUTPUT PSMain(VS_OUTPUT input)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    PSMain_id1();
    streams.ColorTarget_id1 = Shading_id17();
    PS_OUTPUT output = (PS_OUTPUT)0;
    output.ColorTarget_id1 = streams.ColorTarget_id1;
    return output;
}
VS_OUTPUT VSMain(VS_INPUT input)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id6 = input.Position_id6;
    BaseTransformVS_id5(streams);
    VS_OUTPUT output = (VS_OUTPUT)0;
    output.ShadingPosition_id0 = streams.ShadingPosition_id0;
    return output;
}

// Vertex aa7f6e88a4351d228d03a47c6c63f7d4
// Pixel d7cb3643d5bb84cef506e72c370321af