/// <summary>
/// Performs skinning on the position.
/// </summary>
/// <remarks>
/// SkinningMaxBones: Macro - number of threads on the X axis.
/// SILICONSTUDIO_PARADOX_GRAPHICS_API_OPENGLES: Macro - flag to activate on for opengl es 2.0 platforms (int4 attributes like blend indices are not supported).
/// </remarks>
#ifndef SkinningMaxBones
# define SkinningMaxBones 4
#endif

// TODO: use SILICONSTUDIO_PARADOX_GRAPHICS_API_OPENGLES20 because opengl es 3.0 supports int4 atributes.
#ifndef SILICONSTUDIO_PARADOX_GRAPHICS_API_OPENGLES
# define SILICONSTUDIO_PARADOX_GRAPHICS_API_OPENGLES false
#endif

class TransformationSkinning : TransformationBase, PositionStream4, Transformation
{
    stage float4x4 BlendMatrixArray[SkinningMaxBones];

    stage stream float4 BlendWeights : BLENDWEIGHT;
#if SILICONSTUDIO_PARADOX_GRAPHICS_API_OPENGLES
    stage stream float4 BlendIndices : BLENDINDICES;
    //stage stream int4 BlendIndices : BLENDINDICES;
#else
    stage stream uint4 BlendIndices : BLENDINDICES;
#endif

    override void PreTransformPosition()
    {
        base.PreTransformPosition();

        float4x4 blendMatrix = BlendMatrixArray[streams.BlendIndices[0]] * streams.BlendWeights[0]
                             + BlendMatrixArray[streams.BlendIndices[1]] * streams.BlendWeights[1]
                             + BlendMatrixArray[streams.BlendIndices[2]] * streams.BlendWeights[2]
                             + BlendMatrixArray[streams.BlendIndices[3]] * streams.BlendWeights[3];
        float4 blendPos = mul(float4(streams.Position.xyz, 1.0f), blendMatrix);
        blendPos /= blendPos.w;
        streams.PositionWS = blendPos;
    }
};
