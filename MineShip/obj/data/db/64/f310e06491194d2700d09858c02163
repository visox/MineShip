/// <summary>
/// Creates shadow map (just writing into the depth buffer).
/// </summary>
class ShadowMapCasterBase : Transformation, ShaderBase, PositionStream
{
    cbuffer PerPass
    {
        [Link("Light.LightDirection")] 
        stage float3 shadowLightDirection;

        stage float3 shadowLightOffset;

        [Link("ShadowMap.DistanceMax")]
        stage float ShadowMapDistance;
    };

    /// --------------------------------------------------------------------------------
    /// Vertex Shader
    /// --------------------------------------------------------------------------------
    override stage void VSMain()
    {
        base.VSMain();
        float4 vPositionWS = mul(streams.Position, World);
        // For each cascade, adjust Z position according to the light offset, then project along the light.
        // linear depth
        streams.ShadingPosition.z = dot(shadowLightDirection, vPositionWS.xyz - shadowLightOffset) / ShadowMapDistance;
    }
    
    /// --------------------------------------------------------------------------------
    /// Pixel Shader
    /// --------------------------------------------------------------------------------
    override stage void PSMain()
    {
        // no code = null pixel shader
    }
};
