/// <summary>
/// Computes a color based on Fresnel model.
/// </summary>
class ComputeBRDFColorFresnel : ComputeBRDFColor
{
	override float3 Compute(float3 color, float3 lightDirection, float3 normal, float3 eye)
	{
		float3 HalfWay = normalize(lightDirection + eye);
		return Utilities.FresnelSchlick(color, lightDirection, HalfWay, 1.0f);
	}
};
