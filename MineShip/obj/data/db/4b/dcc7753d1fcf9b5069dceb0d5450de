/// <summary>
/// Performs per-pixel shading.
/// </summary>
/// <remarks>
/// LIGHTING_MAX_LIGHT_COUNT: Macro - maximum number of lights.
/// </remarks>
#ifndef LIGHTING_MAX_LIGHT_COUNT
# define LIGHTING_MAX_LIGHT_COUNT 1
#endif
// This class organize the call of the methods to perform the correct per pixel lighting
class ShadingPerPixel : LightParameters, ShadingGroup
{
    override float4 ComputeShading()
	{
        float3 diffuseAlbedo = ComputeDiffuseAlbedo();
        float3 specularAlbedo = ComputeSpecularAlbedo();
        float3 lighting = float3(0,0,0);
        
        [unroll(LIGHTING_MAX_LIGHT_COUNT)]
        for (int i = 0; i < LIGHTING_MAX_LIGHT_COUNT; ++i)
        {
#ifndef LIGHTING_UNROLL_LOOP
            if (i >= LightCount)
                break;
#endif
            lighting += GetAttenuation(i) * (ComputeDiffuseInfluence(diffuseAlbedo, i) + ComputeSpecularInfluence(specularAlbedo, i));
        }

        return float4(lighting, 0.0f);
    }
};