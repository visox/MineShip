/// <summary>
/// Performs default filtering: no filtering.
/// </summary>
class ShadowMapFilterDefault : ShadowMapFilterBase
{
    /// <summary>
    /// Calculate the shadow factor based on the shadow map texture, the position, a sampler
    /// </summary>
    float FilterShadow(Texture2D shadowMapTextureArg, SamplerState shadowMapSamplerArg, float2 position, float shadowMapDistance, int shadowMapIndex)
    {
        // Default plain shadow map
        return shadowMapTextureArg.SampleLevel(shadowMapSamplerArg, position, 0.0).x > shadowMapDistance - 0.00005f;
    }
};
