class Transformation
{
    cbuffer PerFrame {
        // View matrix. Default to Matrix.Identity.
        stage float4x4 View;
        // Inverse View matrix. Default to Matrix.Inverse(View)
        stage float4x4 ViewInverse;
        // Projection matrix. Default to Matrix.Identity.
        stage float4x4 Projection;
        // ViewProjection matrix. Default to = View * Projection.
        stage float4x4 ViewProjection;
        // Screen projected ray vector.  Default to = new Vector2(-1.0f / Projection.M11, 1.0f / Projection.M22);
        stage float2 ProjScreenRay;
        // Eye vector. Default to = View^-1[M41,M42,M43,1.0]
        stage float4 Eye;
        // Eye vector in model space. Default to = (World*View)^-1[M41,M42,M43,1.0]
        stage float4 EyeMS;
    };

    cbuffer PerObject {
        // World matrix. Default to Matrix.Identity.
        stage float4x4 World;
        // Inverse World matrix. Default to Matrix.Inverse(World).
        stage float4x4 WorldInverse;
        // WorldView matrix. Default to = World * View.
        stage float4x4 WorldView;
        // Inverse WorldView matrix. Default to Matrix.Inverse(WorldView)
		stage float4x4 WorldViewInverse;
        // WorldViewProjection matrix. Default to = World * ViewProjection.
        stage float4x4 WorldViewProjection;
    };
};
